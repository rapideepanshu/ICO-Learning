{
  "contractName": "RefundVault",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Closed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Refunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RefundsEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum RefundVault.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "investor",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Closed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum RefundVault.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used for storing funds while a crowdsale is in progress. Supports refunding the money if crowdsale fails, and forwarding it if crowdsale is successful.\",\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"RefundVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crowdsale/RefundVault.sol\":\"RefundVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/crowdsale/Ownable.sol\":{\"keccak256\":\"0xd6be7d4dfbe4b241a99244f10833c111f5361906ee2fe3ffa075ca2e6725e1ae\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6cfa1d56d9deea06e565dc022b2fb278a5e464d0ed418e1f86c2eb0241a6a6c4\",\"dweb:/ipfs/QmYUumKCTKbdYMqUPmXfwbkHEE63ueGBoaXRKDbB7PhSea\"]},\"project:/contracts/crowdsale/RefundVault.sol\":{\"keccak256\":\"0x3f307d38f6172230e4efe97fff38d12b3a7cebceadcaaf21a897099778458191\",\"urls\":[\"bzz-raw://22fcc5d62afbe29471d87eb2064d989a729a495bb442100ddbe5a96b7011a7fa\",\"dweb:/ipfs/QmYpMEbSA1gSawYyy3XS5TYu1qJiVK3jTKEwPCHGSMWPzD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e97380380610e9783398181016040528101906100329190610159565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ac57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff02191690836002811115610139577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550506101cb565b600081519050610153816101b4565b92915050565b60006020828403121561016b57600080fd5b600061017984828501610144565b91505092915050565b600061018d82610194565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101bd81610182565b81146101c857600080fd5b50565b610cbd806101da6000396000f3fe6080604052600436106100865760003560e01c8063c19d93fb11610059578063c19d93fb1461010f578063cb13cddb1461013a578063f2fde38b14610177578063f340fa01146101a0578063fa89401a146101bc57610086565b806343d726d61461008b578063521eb273146100a25780638c52dc41146100cd5780638da5cb5b146100e4575b600080fd5b34801561009757600080fd5b506100a06101e5565b005b3480156100ae57600080fd5b506100b76103b0565b6040516100c49190610acd565b60405180910390f35b3480156100d957600080fd5b506100e26103d6565b005b3480156100f057600080fd5b506100f9610539565b6040516101069190610ab2565b60405180910390f35b34801561011b57600080fd5b5061012461055d565b6040516101319190610ae8565b60405180910390f35b34801561014657600080fd5b50610161600480360381019061015c9190610a24565b610570565b60405161016e9190610b03565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610a24565b610588565b005b6101ba60048036038101906101b59190610a24565b6106d7565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610a4d565b61084c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023d57600080fd5b60006002811115610277577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156102bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146102c957600080fd5b60028060146101000a81548160ff02191690836002811115610314577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103ad573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042e57600080fd5b60006002811115610468577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156104b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146104ba57600080fd5b6001600260146101000a81548160ff02191690836002811115610506577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561061a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072f57600080fd5b60006002811115610769577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156107b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107bb57600080fd5b34600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108069190610b1e565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60016002811115610886577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156108ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108d857600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109a7573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040516109ee9190610b03565b60405180910390a25050565b600081359050610a0981610c59565b92915050565b600081359050610a1e81610c70565b92915050565b600060208284031215610a3657600080fd5b6000610a44848285016109fa565b91505092915050565b600060208284031215610a5f57600080fd5b6000610a6d84828501610a0f565b91505092915050565b610a7f81610b86565b82525050565b610a8e81610b74565b82525050565b610a9d81610bd5565b82525050565b610aac81610bcb565b82525050565b6000602082019050610ac76000830184610a85565b92915050565b6000602082019050610ae26000830184610a76565b92915050565b6000602082019050610afd6000830184610a94565b92915050565b6000602082019050610b186000830184610aa3565b92915050565b6000610b2982610bcb565b9150610b3483610bcb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b6957610b68610be7565b5b828201905092915050565b6000610b7f82610bab565b9050919050565b6000610b9182610bab565b9050919050565b6000819050610ba682610c45565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610be082610b98565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610c5657610c55610c16565b5b50565b610c6281610b74565b8114610c6d57600080fd5b50565b610c7981610b86565b8114610c8457600080fd5b5056fea264697066735822122035b3631a49abf36a80b19eb95f833358801acb2f3f5b283d57a737f6da0c8c2964736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063c19d93fb11610059578063c19d93fb1461010f578063cb13cddb1461013a578063f2fde38b14610177578063f340fa01146101a0578063fa89401a146101bc57610086565b806343d726d61461008b578063521eb273146100a25780638c52dc41146100cd5780638da5cb5b146100e4575b600080fd5b34801561009757600080fd5b506100a06101e5565b005b3480156100ae57600080fd5b506100b76103b0565b6040516100c49190610acd565b60405180910390f35b3480156100d957600080fd5b506100e26103d6565b005b3480156100f057600080fd5b506100f9610539565b6040516101069190610ab2565b60405180910390f35b34801561011b57600080fd5b5061012461055d565b6040516101319190610ae8565b60405180910390f35b34801561014657600080fd5b50610161600480360381019061015c9190610a24565b610570565b60405161016e9190610b03565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610a24565b610588565b005b6101ba60048036038101906101b59190610a24565b6106d7565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610a4d565b61084c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023d57600080fd5b60006002811115610277577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156102bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146102c957600080fd5b60028060146101000a81548160ff02191690836002811115610314577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103ad573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042e57600080fd5b60006002811115610468577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156104b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146104ba57600080fd5b6001600260146101000a81548160ff02191690836002811115610506577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561061a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072f57600080fd5b60006002811115610769577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156107b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107bb57600080fd5b34600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108069190610b1e565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60016002811115610886577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156108ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108d857600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109a7573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040516109ee9190610b03565b60405180910390a25050565b600081359050610a0981610c59565b92915050565b600081359050610a1e81610c70565b92915050565b600060208284031215610a3657600080fd5b6000610a44848285016109fa565b91505092915050565b600060208284031215610a5f57600080fd5b6000610a6d84828501610a0f565b91505092915050565b610a7f81610b86565b82525050565b610a8e81610b74565b82525050565b610a9d81610bd5565b82525050565b610aac81610bcb565b82525050565b6000602082019050610ac76000830184610a85565b92915050565b6000602082019050610ae26000830184610a76565b92915050565b6000602082019050610afd6000830184610a94565b92915050565b6000602082019050610b186000830184610aa3565b92915050565b6000610b2982610bcb565b9150610b3483610bcb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b6957610b68610be7565b5b828201905092915050565b6000610b7f82610bab565b9050919050565b6000610b9182610bab565b9050919050565b6000819050610ba682610c45565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610be082610b98565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610c5657610c55610c16565b5b50565b610c6281610b74565b8114610c6d57600080fd5b50565b610c7981610b86565b8114610c8457600080fd5b5056fea264697066735822122035b3631a49abf36a80b19eb95f833358801acb2f3f5b283d57a737f6da0c8c2964736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:861:26",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:88:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "88:22:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "103:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "97:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:13:26"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "154:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "119:34:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "119:41:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "119:41:26"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "56:6:26",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "64:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:26",
                "type": ""
              }
            ],
            "src": "7:159:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "257:215:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "303:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "315:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "305:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "305:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "305:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "278:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "287:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "299:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "270:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "267:2:26"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "329:136:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "344:15:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:1:26",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "348:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "373:82:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "427:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "438:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "423:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "423:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "447:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "383:39:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:72:26"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "373:6:26"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "227:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "238:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "250:6:26",
                "type": ""
              }
            ],
            "src": "172:300:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:51:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:35:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "570:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "552:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:24:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "541:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "513:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "523:7:26",
                "type": ""
              }
            ],
            "src": "478:104:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:81:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:65:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "658:5:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:42:26",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "654:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:54:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:26",
                "type": ""
              }
            ],
            "src": "588:126:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:87:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "836:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "838:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "838:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "838:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "794:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:26"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "801:25:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "801:32:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "791:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:43:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:51:26"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:26"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "764:5:26",
                "type": ""
              }
            ],
            "src": "720:138:26"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4148:26",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:26"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:26",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:26",
                "type": ""
              }
            ],
            "src": "7:139:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:95:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "231:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "260:34:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:41:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:41:26"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:26",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:26",
                "type": ""
              }
            ],
            "src": "152:155:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:196:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "434:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "400:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "409:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "396:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "396:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "392:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "389:2:26"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "451:117:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "466:15:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "480:1:26",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "470:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "495:63:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "530:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "541:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "526:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "526:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "550:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "505:20:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "505:53:26"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "495:6:26"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "349:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "360:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "372:6:26",
                "type": ""
              }
            ],
            "src": "313:262:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:204:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "713:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:26"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "727:125:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "742:15:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "756:1:26",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "746:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "771:71:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "814:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "825:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "810:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "810:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "834:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "781:28:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "781:61:26"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "771:6:26"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "625:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "636:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "648:6:26",
                "type": ""
              }
            ],
            "src": "581:278:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "946:61:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "963:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "994:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "968:25:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "968:32:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "956:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "956:45:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "956:45:26"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "934:5:26",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "941:3:26",
                "type": ""
              }
            ],
            "src": "865:142:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1078:53:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1095:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1118:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:17:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:24:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1088:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1088:37:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1088:37:26"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1066:5:26",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1073:3:26",
                "type": ""
              }
            ],
            "src": "1013:118:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1210:74:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1227:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1271:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$3126_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1232:38:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1232:45:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1220:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:58:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1220:58:26"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$3126_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1198:5:26",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1205:3:26",
                "type": ""
              }
            ],
            "src": "1137:147:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1355:53:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1372:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1395:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1377:17:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1377:24:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:37:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:37:26"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1343:5:26",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1350:3:26",
                "type": ""
              }
            ],
            "src": "1290:118:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1512:124:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1522:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1534:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1545:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1530:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1522:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1602:6:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1615:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1626:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1611:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1611:17:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1558:43:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:71:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1558:71:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1496:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1507:4:26",
                "type": ""
              }
            ],
            "src": "1414:222:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1756:140:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1766:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1778:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1789:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1774:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1766:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1862:6:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1875:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1886:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1871:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1871:17:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1802:59:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:87:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1802:87:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1728:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1740:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1751:4:26",
                "type": ""
              }
            ],
            "src": "1642:254:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:132:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2018:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2030:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2041:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2026:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2018:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2106:6:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2119:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2130:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2115:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:17:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$3126_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2054:51:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2054:79:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2054:79:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$3126__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1980:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1992:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2003:4:26",
                "type": ""
              }
            ],
            "src": "1902:238:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2244:124:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2254:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2266:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2277:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2262:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2254:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2334:6:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2347:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2358:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2343:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2343:17:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2290:43:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2290:71:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2290:71:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2216:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2228:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2239:4:26",
                "type": ""
              }
            ],
            "src": "2146:222:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2418:261:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2428:25:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2451:1:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2433:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2428:1:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2462:25:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2485:1:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2467:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2462:1:26"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2625:22:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2627:16:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2627:18:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2627:18:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2546:1:26"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2553:66:26",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2621:1:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2549:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2549:74:26"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2543:2:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:81:26"
                  },
                  "nodeType": "YulIf",
                  "src": "2540:2:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2657:16:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2668:1:26"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2671:1:26"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2664:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:9:26"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2657:3:26"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2405:1:26",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2408:1:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2414:3:26",
                "type": ""
              }
            ],
            "src": "2374:305:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2730:51:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2740:35:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2769:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2751:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2751:24:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2740:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2712:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2722:7:26",
                "type": ""
              }
            ],
            "src": "2685:96:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2840:51:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2850:35:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2879:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2861:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2861:24:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2850:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2822:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2832:7:26",
                "type": ""
              }
            ],
            "src": "2787:104:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2952:76:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2962:16:26",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2973:5:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2962:7:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3016:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$3126",
                      "nodeType": "YulIdentifier",
                      "src": "2979:36:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2979:43:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2979:43:26"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$3126",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2934:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2944:7:26",
                "type": ""
              }
            ],
            "src": "2897:131:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3079:81:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3089:65:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3104:5:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3111:42:26",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3100:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:54:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3089:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3061:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3071:7:26",
                "type": ""
              }
            ],
            "src": "3034:126:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3211:32:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3221:16:26",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3232:5:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3221:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3193:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3203:7:26",
                "type": ""
              }
            ],
            "src": "3166:77:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3317:63:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3327:47:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3368:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$3126",
                      "nodeType": "YulIdentifier",
                      "src": "3340:27:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:34:26"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3327:9:26"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$3126_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3297:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3307:9:26",
                "type": ""
              }
            ],
            "src": "3249:131:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3414:152:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3431:1:26",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3434:77:26",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3424:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3424:88:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3424:88:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3528:1:26",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3531:4:26",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3521:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3521:15:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3521:15:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3552:1:26",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3555:4:26",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3545:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3545:15:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3545:15:26"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3386:180:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3600:152:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3617:1:26",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3620:77:26",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3610:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3610:88:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3610:88:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3714:1:26",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3717:4:26",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3707:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:15:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3707:15:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3738:1:26",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3741:4:26",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3731:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3731:15:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3731:15:26"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3572:180:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3811:62:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3845:22:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "3847:16:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3847:18:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3847:18:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3834:5:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3841:1:26",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3831:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3831:12:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3824:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3824:20:26"
                  },
                  "nodeType": "YulIf",
                  "src": "3821:2:26"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$3126",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3804:5:26",
                "type": ""
              }
            ],
            "src": "3758:115:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3922:79:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3979:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3988:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3991:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3981:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3981:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3981:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3945:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3970:5:26"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3952:17:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3952:24:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3942:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3942:35:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3935:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3935:43:26"
                  },
                  "nodeType": "YulIf",
                  "src": "3932:2:26"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3915:5:26",
                "type": ""
              }
            ],
            "src": "3879:122:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4058:87:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4123:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4132:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4135:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4125:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4125:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4125:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4081:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4114:5:26"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "4088:25:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4088:32:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4078:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4078:43:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4071:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:51:26"
                  },
                  "nodeType": "YulIf",
                  "src": "4068:2:26"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4051:5:26",
                "type": ""
              }
            ],
            "src": "4007:138:26"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_enum$_State_$3126_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$3126_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_State_$3126__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$3126_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_State_$3126(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$3126(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_State_$3126_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$3126(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$3126(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "263:1290:23:-:0;;;602:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;591:10:22;583:5;;:18;;;;;;;;;;;;;;;;;;676:1:23;657:21;;:7;:21;;;;649:30;;;;;;698:7;689:6;;:16;;;;;;;;;;;;;;;;;;723:12;715:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:140;263:1290;;7:159:26;72:5;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;250:6;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;523:7;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;625:7;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;263:1290:23:-;;;;;;;",
  "deployedSourceMap": "263:1290:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:182;;;;;;;;;;;;;:::i;:::-;;425:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:153;;;;;;;;;;;;;:::i;:::-;;284:20:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;460:18:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;375:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;959:192:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;748:172:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1273:278;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;926:182;756:5:22;;;;;;;;;;742:19;;:10;:19;;;734:28;;;;;;987:12:23::1;978:21;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;970:30;;;::::0;::::1;;1018:12;1010:5:::0;::::1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:8;;;;;;;;;;1063:6;;;;;;;;;;;:15;;:38;1079:21;1063:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;926:182::o:0;425:29::-;;;;;;;;;;;;;:::o;1114:153::-;756:5:22;;;;;;;;;;742:19;;:10;:19;;;734:28;;;;;;1183:12:23::1;1174:21;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;1166:30;;;::::0;::::1;;1214:15;1206:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:16;;;;;;;;;;1114:153::o:0;284:20:22:-;;;;;;;;;;;;:::o;460:18:23:-;;;;;;;;;;;;;:::o;375:44::-;;;;;;;;;;;;;;;;;:::o;959:192:22:-;756:5;;;;;;;;;;742:19;;:10;:19;;;734:28;;;;;;1060:1:::1;1040:22;;:8;:22;;;;1032:31;;;::::0;::::1;;1107:8;1079:37;;1100:5;::::0;::::1;;;;;;;;1079:37;;;;;;;;;;;;1135:8;1127:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;959:192:::0;:::o;748:172:23:-;756:5:22;;;;;;;;;;742:19;;:10;:19;;;734:28;;;;;;835:12:23::1;826:21;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;818:30;;;::::0;::::1;;903:9;880;:19;890:8;880:19;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;858:9;:19;868:8;858:19;;;;;;;;;;;;;;;:55;;;;748:172:::0;:::o;1273:278::-;1349:15;1340:24;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;1332:33;;;;;;1375:22;1400:9;:19;1410:8;1400:19;;;;;;;;;;;;;;;;1375:44;;1451:1;1429:9;:19;1439:8;1429:19;;;;;;;;;;;;;;;:23;;;;1462:8;:17;;:33;1480:14;1462:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1519:8;1510:34;;;1529:14;1510:34;;;;;;:::i;:::-;;;;;;;;1273:278;;:::o;7:139:26:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:262::-;372:6;421:2;409:9;400:7;396:23;392:32;389:2;;;437:1;434;427:12;389:2;480:1;505:53;550:7;541:6;530:9;526:22;505:53;:::i;:::-;495:63;;451:117;379:196;;;;:::o;581:278::-;648:6;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:61;834:7;825:6;814:9;810:22;781:61;:::i;:::-;771:71;;727:125;655:204;;;;:::o;865:142::-;968:32;994:5;968:32;:::i;:::-;963:3;956:45;946:61;;:::o;1013:118::-;1100:24;1118:5;1100:24;:::i;:::-;1095:3;1088:37;1078:53;;:::o;1137:147::-;1232:45;1271:5;1232:45;:::i;:::-;1227:3;1220:58;1210:74;;:::o;1290:118::-;1377:24;1395:5;1377:24;:::i;:::-;1372:3;1365:37;1355:53;;:::o;1414:222::-;1507:4;1545:2;1534:9;1530:18;1522:26;;1558:71;1626:1;1615:9;1611:17;1602:6;1558:71;:::i;:::-;1512:124;;;;:::o;1642:254::-;1751:4;1789:2;1778:9;1774:18;1766:26;;1802:87;1886:1;1875:9;1871:17;1862:6;1802:87;:::i;:::-;1756:140;;;;:::o;1902:238::-;2003:4;2041:2;2030:9;2026:18;2018:26;;2054:79;2130:1;2119:9;2115:17;2106:6;2054:79;:::i;:::-;2008:132;;;;:::o;2146:222::-;2239:4;2277:2;2266:9;2262:18;2254:26;;2290:71;2358:1;2347:9;2343:17;2334:6;2290:71;:::i;:::-;2244:124;;;;:::o;2374:305::-;2414:3;2433:20;2451:1;2433:20;:::i;:::-;2428:25;;2467:20;2485:1;2467:20;:::i;:::-;2462:25;;2621:1;2553:66;2549:74;2546:1;2543:81;2540:2;;;2627:18;;:::i;:::-;2540:2;2671:1;2668;2664:9;2657:16;;2418:261;;;;:::o;2685:96::-;2722:7;2751:24;2769:5;2751:24;:::i;:::-;2740:35;;2730:51;;;:::o;2787:104::-;2832:7;2861:24;2879:5;2861:24;:::i;:::-;2850:35;;2840:51;;;:::o;2897:131::-;2944:7;2973:5;2962:16;;2979:43;3016:5;2979:43;:::i;:::-;2952:76;;;:::o;3034:126::-;3071:7;3111:42;3104:5;3100:54;3089:65;;3079:81;;;:::o;3166:77::-;3203:7;3232:5;3221:16;;3211:32;;;:::o;3249:131::-;3307:9;3340:34;3368:5;3340:34;:::i;:::-;3327:47;;3317:63;;;:::o;3386:180::-;3434:77;3431:1;3424:88;3531:4;3528:1;3521:15;3555:4;3552:1;3545:15;3572:180;3620:77;3617:1;3610:88;3717:4;3714:1;3707:15;3741:4;3738:1;3731:15;3758:115;3841:1;3834:5;3831:12;3821:2;;3847:18;;:::i;:::-;3821:2;3811:62;:::o;3879:122::-;3952:24;3970:5;3952:24;:::i;:::-;3945:5;3942:35;3932:2;;3991:1;3988;3981:12;3932:2;3922:79;:::o;4007:138::-;4088:32;4114:5;4088:32;:::i;:::-;4081:5;4078:43;4068:2;;4135:1;4132;4125:12;4068:2;4058:87;:::o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @title RefundVault\n * @dev This contract is used for storing funds while a crowdsale\n * is in progress. Supports refunding the money if crowdsale fails,\n * and forwarding it if crowdsale is successful.\n */\ncontract RefundVault is Ownable {\n    enum State {\n        Active,\n        Refunding,\n        Closed\n    }\n\n    mapping(address => uint256) public deposited;\n    address payable public wallet;\n    State public state;\n\n    event Closed();\n    event RefundsEnabled();\n    event Refunded(address indexed beneficiary, uint256 weiAmount);\n\n    constructor(address payable _wallet) {\n        require(_wallet != address(0));\n        wallet = _wallet;\n        state = State.Active;\n    }\n\n    function deposit(address investor) public payable onlyOwner {\n        require(state == State.Active);\n        deposited[investor] = deposited[investor] + (msg.value);\n    }\n\n    function close() public onlyOwner {\n        require(state == State.Active);\n        state = State.Closed;\n        emit Closed();\n        wallet.transfer(address(this).balance);\n    }\n\n    function enableRefunds() public onlyOwner {\n        require(state == State.Active);\n        state = State.Refunding;\n        emit RefundsEnabled();\n    }\n\n    function refund(address payable investor) public {\n        require(state == State.Refunding);\n        uint256 depositedValue = deposited[investor];\n        deposited[investor] = 0;\n        investor.transfer(depositedValue);\n        emit Refunded(investor, depositedValue);\n    }\n}\n",
  "sourcePath": "C:\\Users\\MY\\Desktop\\Rapid_Projects\\ICO\\contracts\\crowdsale\\RefundVault.sol",
  "ast": {
    "absolutePath": "project:/contracts/crowdsale/RefundVault.sol",
    "exportedSymbols": {
      "Ownable": [
        3116
      ],
      "RefundVault": [
        3285
      ]
    },
    "id": 3286,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3118,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "project:/contracts/crowdsale/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3119,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3117,
        "src": "25:23:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3121,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3116,
              "src": "287:7:23"
            },
            "id": 3122,
            "nodeType": "InheritanceSpecifier",
            "src": "287:7:23"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3120,
          "nodeType": "StructuredDocumentation",
          "src": "50:212:23",
          "text": " @title RefundVault\n @dev This contract is used for storing funds while a crowdsale\n is in progress. Supports refunding the money if crowdsale fails,\n and forwarding it if crowdsale is successful."
        },
        "fullyImplemented": true,
        "id": 3285,
        "linearizedBaseContracts": [
          3285,
          3116
        ],
        "name": "RefundVault",
        "nameLocation": "272:11:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RefundVault.State",
            "id": 3126,
            "members": [
              {
                "id": 3123,
                "name": "Active",
                "nameLocation": "322:6:23",
                "nodeType": "EnumValue",
                "src": "322:6:23"
              },
              {
                "id": 3124,
                "name": "Refunding",
                "nameLocation": "338:9:23",
                "nodeType": "EnumValue",
                "src": "338:9:23"
              },
              {
                "id": 3125,
                "name": "Closed",
                "nameLocation": "357:6:23",
                "nodeType": "EnumValue",
                "src": "357:6:23"
              }
            ],
            "name": "State",
            "nameLocation": "306:5:23",
            "nodeType": "EnumDefinition",
            "src": "301:68:23"
          },
          {
            "constant": false,
            "functionSelector": "cb13cddb",
            "id": 3130,
            "mutability": "mutable",
            "name": "deposited",
            "nameLocation": "410:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 3285,
            "src": "375:44:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3129,
              "keyType": {
                "id": 3127,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "383:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "375:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3128,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "394:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "521eb273",
            "id": 3132,
            "mutability": "mutable",
            "name": "wallet",
            "nameLocation": "448:6:23",
            "nodeType": "VariableDeclaration",
            "scope": 3285,
            "src": "425:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3131,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "425:15:23",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 3135,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "473:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 3285,
            "src": "460:18:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$3126",
              "typeString": "enum RefundVault.State"
            },
            "typeName": {
              "id": 3134,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3133,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3126,
                "src": "460:5:23"
              },
              "referencedDeclaration": 3126,
              "src": "460:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$3126",
                "typeString": "enum RefundVault.State"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3137,
            "name": "Closed",
            "nameLocation": "491:6:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "497:2:23"
            },
            "src": "485:15:23"
          },
          {
            "anonymous": false,
            "id": 3139,
            "name": "RefundsEnabled",
            "nameLocation": "511:14:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:23"
            },
            "src": "505:23:23"
          },
          {
            "anonymous": false,
            "id": 3145,
            "name": "Refunded",
            "nameLocation": "539:8:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3141,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "564:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 3145,
                  "src": "548:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "585:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 3145,
                  "src": "577:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:48:23"
            },
            "src": "533:63:23"
          },
          {
            "body": {
              "id": 3168,
              "nodeType": "Block",
              "src": "639:103:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3151,
                          "name": "_wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3147,
                          "src": "657:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "676:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "668:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "668:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "668:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "657:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "649:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3158,
                  "nodeType": "ExpressionStatement",
                  "src": "649:30:23"
                },
                {
                  "expression": {
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3159,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "689:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3160,
                      "name": "_wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3147,
                      "src": "698:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "689:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3162,
                  "nodeType": "ExpressionStatement",
                  "src": "689:16:23"
                },
                {
                  "expression": {
                    "id": 3166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3163,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3135,
                      "src": "715:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$3126",
                        "typeString": "enum RefundVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3164,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "723:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                          "typeString": "type(enum RefundVault.State)"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3123,
                      "src": "723:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$3126",
                        "typeString": "enum RefundVault.State"
                      }
                    },
                    "src": "715:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$3126",
                      "typeString": "enum RefundVault.State"
                    }
                  },
                  "id": 3167,
                  "nodeType": "ExpressionStatement",
                  "src": "715:20:23"
                }
              ]
            },
            "id": 3169,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3147,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nameLocation": "630:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 3169,
                  "src": "614:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "613:25:23"
            },
            "returnParameters": {
              "id": 3149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "639:0:23"
            },
            "scope": 3285,
            "src": "602:140:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3195,
              "nodeType": "Block",
              "src": "808:112:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$3126",
                          "typeString": "enum RefundVault.State"
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3177,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "826:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3178,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3126,
                            "src": "835:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                              "typeString": "type(enum RefundVault.State)"
                            }
                          },
                          "id": 3179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3123,
                          "src": "835:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "src": "826:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "818:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3182,
                  "nodeType": "ExpressionStatement",
                  "src": "818:30:23"
                },
                {
                  "expression": {
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3183,
                        "name": "deposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3130,
                        "src": "858:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3185,
                      "indexExpression": {
                        "id": 3184,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3171,
                        "src": "868:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "858:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 3186,
                          "name": "deposited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3130,
                          "src": "880:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3188,
                        "indexExpression": {
                          "id": 3187,
                          "name": "investor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3171,
                          "src": "890:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "880:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "expression": {
                              "id": 3189,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "903:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "903:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3191,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "902:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "880:33:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "858:55:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3194,
                  "nodeType": "ExpressionStatement",
                  "src": "858:55:23"
                }
              ]
            },
            "functionSelector": "f340fa01",
            "id": 3196,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3173,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3088,
                  "src": "798:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "798:9:23"
              }
            ],
            "name": "deposit",
            "nameLocation": "757:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3171,
                  "mutability": "mutable",
                  "name": "investor",
                  "nameLocation": "773:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 3196,
                  "src": "765:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:18:23"
            },
            "returnParameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:0:23"
            },
            "scope": 3285,
            "src": "748:172:23",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "960:148:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$3126",
                          "typeString": "enum RefundVault.State"
                        },
                        "id": 3205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3202,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "978:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3203,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3126,
                            "src": "987:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                              "typeString": "type(enum RefundVault.State)"
                            }
                          },
                          "id": 3204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3123,
                          "src": "987:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "src": "978:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "970:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "970:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "970:30:23"
                },
                {
                  "expression": {
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3208,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3135,
                      "src": "1010:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$3126",
                        "typeString": "enum RefundVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3209,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "1018:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                          "typeString": "type(enum RefundVault.State)"
                        }
                      },
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Closed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3125,
                      "src": "1018:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$3126",
                        "typeString": "enum RefundVault.State"
                      }
                    },
                    "src": "1010:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$3126",
                      "typeString": "enum RefundVault.State"
                    }
                  },
                  "id": 3212,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:20:23"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3213,
                      "name": "Closed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3137,
                      "src": "1045:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:8:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3215,
                  "nodeType": "EmitStatement",
                  "src": "1040:13:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3221,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1087:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundVault_$3285",
                                "typeString": "contract RefundVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RefundVault_$3285",
                                "typeString": "contract RefundVault"
                              }
                            ],
                            "id": 3220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1079:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3219,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1079:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1079:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1079:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3216,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3132,
                        "src": "1063:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1063:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:38:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:38:23"
                }
              ]
            },
            "functionSelector": "43d726d6",
            "id": 3227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3198,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3088,
                  "src": "950:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "950:9:23"
              }
            ],
            "name": "close",
            "nameLocation": "935:5:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:2:23"
            },
            "returnParameters": {
              "id": 3200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:23"
            },
            "scope": 3285,
            "src": "926:182:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3247,
              "nodeType": "Block",
              "src": "1156:111:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$3126",
                          "typeString": "enum RefundVault.State"
                        },
                        "id": 3236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3233,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "1174:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3234,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3126,
                            "src": "1183:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                              "typeString": "type(enum RefundVault.State)"
                            }
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3123,
                          "src": "1183:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "src": "1174:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1166:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3238,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:30:23"
                },
                {
                  "expression": {
                    "id": 3242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3239,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3135,
                      "src": "1206:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$3126",
                        "typeString": "enum RefundVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3240,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "1214:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                          "typeString": "type(enum RefundVault.State)"
                        }
                      },
                      "id": 3241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3124,
                      "src": "1214:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$3126",
                        "typeString": "enum RefundVault.State"
                      }
                    },
                    "src": "1206:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$3126",
                      "typeString": "enum RefundVault.State"
                    }
                  },
                  "id": 3243,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:23:23"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3244,
                      "name": "RefundsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3139,
                      "src": "1244:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:16:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3246,
                  "nodeType": "EmitStatement",
                  "src": "1239:21:23"
                }
              ]
            },
            "functionSelector": "8c52dc41",
            "id": 3248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3229,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3088,
                  "src": "1146:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1146:9:23"
              }
            ],
            "name": "enableRefunds",
            "nameLocation": "1123:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:2:23"
            },
            "returnParameters": {
              "id": 3231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:23"
            },
            "scope": 3285,
            "src": "1114:153:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3283,
              "nodeType": "Block",
              "src": "1322:229:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$3126",
                          "typeString": "enum RefundVault.State"
                        },
                        "id": 3257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3254,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "1340:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3255,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3126,
                            "src": "1349:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$3126_$",
                              "typeString": "type(enum RefundVault.State)"
                            }
                          },
                          "id": 3256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Refunding",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3124,
                          "src": "1349:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$3126",
                            "typeString": "enum RefundVault.State"
                          }
                        },
                        "src": "1340:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1332:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1332:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3259,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:33:23"
                },
                {
                  "assignments": [
                    3261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3261,
                      "mutability": "mutable",
                      "name": "depositedValue",
                      "nameLocation": "1383:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 3283,
                      "src": "1375:22:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1375:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3265,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3262,
                      "name": "deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "1400:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3264,
                    "indexExpression": {
                      "id": 3263,
                      "name": "investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3250,
                      "src": "1410:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1400:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1375:44:23"
                },
                {
                  "expression": {
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3266,
                        "name": "deposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3130,
                        "src": "1429:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3268,
                      "indexExpression": {
                        "id": 3267,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3250,
                        "src": "1439:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1429:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1451:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1429:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3271,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:23:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3275,
                        "name": "depositedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "1480:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3272,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3250,
                        "src": "1462:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1462:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "ExpressionStatement",
                  "src": "1462:33:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3279,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3250,
                        "src": "1519:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3280,
                        "name": "depositedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "1529:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3278,
                      "name": "Refunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3145,
                      "src": "1510:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:34:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3282,
                  "nodeType": "EmitStatement",
                  "src": "1505:39:23"
                }
              ]
            },
            "functionSelector": "fa89401a",
            "id": 3284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "1282:6:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3250,
                  "mutability": "mutable",
                  "name": "investor",
                  "nameLocation": "1305:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 3284,
                  "src": "1289:24:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:26:23"
            },
            "returnParameters": {
              "id": 3252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:23"
            },
            "scope": 3285,
            "src": "1273:278:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3286,
        "src": "263:1290:23",
        "usedErrors": []
      }
    ],
    "src": "0:1554:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-05T11:37:39.640Z",
  "devdoc": {
    "details": "This contract is used for storing funds while a crowdsale is in progress. Supports refunding the money if crowdsale fails, and forwarding it if crowdsale is successful.",
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "RefundVault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}