{
  "contractName": "Context",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/GSN/Context.sol\":{\"keccak256\":\"0x7b6be2dc53fed2bf482c44ad88e60e9dc24b5fbcf64e194cb50b5e15780c8313\",\"urls\":[\"bzz-raw://acd1fb405b88824d47b97d6a688204e2ed7fb9da7fefdd99d368a528444b994f\",\"dweb:/ipfs/QmP7GGH28SF4GPFxBm7BPFqatXBrznruDydtmT3F2LQe7T\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122069e93ea9e2f2ebdc801881838c7fe43c4ddfee524dbf0d624c1886dfd501495964736f6c63430008040033",
  "deployedBytecode": "0x6080604052600080fdfea264697066735822122069e93ea9e2f2ebdc801881838c7fe43c4ddfee524dbf0d624c1886dfd501495964736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "525:629:25:-:0;;;702:16;;;;;;;;;;525:629;;;;;;",
  "deployedSourceMap": "525:629:25:-:0;;;;;",
  "source": "pragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor() {}\n\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        address payable sender = payable(msg.sender);\n        return sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n",
  "sourcePath": "C:\\Users\\MY\\Desktop\\Rapid_Projects\\ICO\\contracts\\GSN\\Context.sol",
  "ast": {
    "absolutePath": "project:/contracts/GSN/Context.sol",
    "exportedSymbols": {
      "Context": [
        3993
      ]
    },
    "id": 3994,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3961,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3993,
        "linearizedBaseContracts": [
          3993
        ],
        "name": "Context",
        "nameLocation": "534:7:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3964,
              "nodeType": "Block",
              "src": "716:2:25",
              "statements": []
            },
            "id": 3965,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:25"
            },
            "returnParameters": {
              "id": 3963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:25"
            },
            "scope": 3993,
            "src": "702:16:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3980,
              "nodeType": "Block",
              "src": "840:84:25",
              "statements": [
                {
                  "assignments": [
                    3971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3971,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "866:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 3980,
                      "src": "850:22:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 3970,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:15:25",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3977,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3974,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "883:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "883:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "875:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 3972,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "875:8:25",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "850:44:25"
                },
                {
                  "expression": {
                    "id": 3978,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3971,
                    "src": "911:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 3969,
                  "id": 3979,
                  "nodeType": "Return",
                  "src": "904:13:25"
                }
              ]
            },
            "id": 3981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "787:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:2:25"
            },
            "returnParameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3981,
                  "src": "823:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:15:25",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "822:17:25"
            },
            "scope": 3993,
            "src": "778:146:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3991,
              "nodeType": "Block",
              "src": "987:165:25",
              "statements": [
                {
                  "expression": {
                    "id": 3986,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4294967268,
                    "src": "997:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$3993",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 3987,
                  "nodeType": "ExpressionStatement",
                  "src": "997:4:25"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 3988,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1137:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "1137:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 3985,
                  "id": 3990,
                  "nodeType": "Return",
                  "src": "1130:15:25"
                }
              ]
            },
            "id": 3992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "939:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:25"
            },
            "returnParameters": {
              "id": 3985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3992,
                  "src": "973:12:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3983,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:14:25"
            },
            "scope": 3993,
            "src": "930:222:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3994,
        "src": "525:629:25",
        "usedErrors": []
      }
    ],
    "src": "0:1155:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-04T12:51:00.496Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}