{
  "contractName": "RefundableCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"CrowdsaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\",\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"claimRefund(address)\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful.\",\"params\":{\"refundee\":\"Whose refund will be claimed.\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, creates RefundEscrow.\",\"params\":{\"goal\":\"Funding goal\"}},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"returns\":{\"_0\":\"true if the crowdsale is finalized, false otherwise.\"}},\"goal()\":{\"returns\":{\"_0\":\"minimum amount of funds to be raised in wei.\"}},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"returns\":{\"_0\":\"Whether funding goal was reached\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"RefundableCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/distribution/RefundableCrowdsale.sol\":\"RefundableCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0x21f401db2149ba0419c48ba2d8a58297eebc87d839e526d84b06d19f68dcf375\",\"urls\":[\"bzz-raw://694814de85e80d47a9b5e155ddedcba2bc218c52c68643209f72a69320a03ae0\",\"dweb:/ipfs/QmTsduBuFAHf6ciWZDovn9vyp72QkaVMcBzVRcvSARKW6w\"]},\"project:/contracts/TimedCrowdsale.sol\":{\"keccak256\":\"0x6754e2ac24baea3413b0b3383b678a5494c9bc524bea0eea5280d9a06800a075\",\"urls\":[\"bzz-raw://80d4f6012dc57949d244e577154692b59d7ca0f6cab7aca4b623f814efba1801\",\"dweb:/ipfs/QmTrRQPTE3ftunj5X3dXedU991iPtiajyu2Z27MYnzkLZp\"]},\"project:/contracts/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0xea51e6522c8dd52b4ea8ee60c74c5cba298916b83de0682e644ca8683d3c581b\",\"urls\":[\"bzz-raw://1687480cab7fa122f4ae4aafd74844356462d5b5308e8bc87ad90a68ee38574e\",\"dweb:/ipfs/QmQLUJZ1ULZ7FDWxw9ziWWdtJFkLgjYkG7JxwHzNCH8b2i\"]},\"project:/contracts/distribution/RefundableCrowdsale.sol\":{\"keccak256\":\"0x017426a0746b42bdb4ae1044e3e2e5f69c0d73ff25c468dbcb8a4c661ee26b57\",\"urls\":[\"bzz-raw://321c572d6075a4421e49b59188a7c9bc2d8c802c22c3bece7606731730efcf6d\",\"dweb:/ipfs/Qmeg1LUNUAyNrQnsmkRg8NeodybGr9v5DdBjiN11FnRDfD\"]},\"project:/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0x9b92cd727f8e625f741a98f4cb75e71b661a07ef3e5487f2d13122228984a99e\",\"urls\":[\"bzz-raw://7de4e677205703d792df5515105889ab127e8b57ddcb82d08f9dc7f5c42dc59c\",\"dweb:/ipfs/Qme9CB89DB5hDtv9cej99a1qz7cMJAy6UGp7x1VRSwCF49\"]},\"project:/contracts/payment/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xcdaf21cbbf2f301dd38567174eaa6419448bd06021cd565e200d95eb2d91ecf1\",\"urls\":[\"bzz-raw://0e89b2977906ca7478db83be0f35a930d0de8fb57008a0b7a7357c22ecb7839a\",\"dweb:/ipfs/QmRGAnyT6h5m1QrrKmJBAw2HRNDcNrRJfPA6NZ98rHQxc2\"]},\"project:/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0x1760d104ec688e032698c27818a026558ffb492c39c656a9d71f05fe1277d4ff\",\"urls\":[\"bzz-raw://89cdedb57dc3f84e1945a0203e7577b6201cc652cf61c88684a6d00e43614df7\",\"dweb:/ipfs/QmenMUZwJtdawSCBBhPNJk7BFjhNBgXzoWDxA7Xy8AWSvh\"]},\"project:/contracts/payment/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xb9988a2ad569567640f60b74f2f9ef43c1ad345061a8c4163b99ef53c8eb3924\",\"urls\":[\"bzz-raw://409983a4ef35755623a62b713a6e47312794a8a6cf7cd8e9dd29e3ed9906dd54\",\"dweb:/ipfs/QmRABBtoLfyFnZQqjHfo8SgJdUQuHD7FhdzgvWEjVq8CEG\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./FinalizableCrowdsale.sol\";\nimport \"../payment/escrow/RefundEscrow.sol\";\n\n/**\n * @title RefundableCrowdsale\n * @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n * getting a refund if goal is not met.\n *\n * Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n * is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n * the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n * the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\n */\nabstract contract RefundableCrowdsale is Context, FinalizableCrowdsale {\n    using SafeMath for uint256;\n\n    // minimum amount of funds to be raised in weis\n    uint256 private _goal;\n\n    // refund escrow used to hold funds while crowdsale is running\n    RefundEscrow private _escrow;\n\n    /**\n     * @dev Constructor, creates RefundEscrow.\n     * @param goal Funding goal\n     */\n    constructor(uint256 goal) {\n        require(goal > 0, \"RefundableCrowdsale: goal is 0\");\n        _escrow = new RefundEscrow(wallet());\n        _goal = goal;\n    }\n\n    /**\n     * @return minimum amount of funds to be raised in wei.\n     */\n    function goal() public view returns (uint256) {\n        return _goal;\n    }\n\n    /**\n     * @dev Investors can claim refunds here if crowdsale is unsuccessful.\n     * @param refundee Whose refund will be claimed.\n     */\n    function claimRefund(address payable refundee) public {\n        require(finalized(), \"RefundableCrowdsale: not finalized\");\n        require(!goalReached(), \"RefundableCrowdsale: goal reached\");\n\n        _escrow.withdraw(refundee);\n    }\n\n    /**\n     * @dev Checks whether funding goal was reached.\n     * @return Whether funding goal was reached\n     */\n    function goalReached() public view returns (bool) {\n        return weiRaised() >= _goal;\n    }\n\n    /**\n     * @dev Escrow finalization task, called when finalize() is called.\n     */\n    function _finalization() internal override {\n        if (goalReached()) {\n            _escrow.close();\n            _escrow.beneficiaryWithdraw();\n        } else {\n            _escrow.enableRefunds();\n        }\n\n        super._finalization();\n    }\n\n    /**\n     * @dev Overrides Crowdsale fund forwarding, sending funds to escrow.\n     */\n    function _forwardFunds() internal virtual override {\n        _escrow.deposit{value: msg.value}(_msgSender());\n    }\n}\n",
  "sourcePath": "C:\\Users\\MY\\Desktop\\Rapid_Projects\\ICO\\contracts\\distribution\\RefundableCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/distribution/RefundableCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        2204
      ],
      "ConditionalEscrow": [
        4673
      ],
      "Context": [
        2226
      ],
      "Crowdsale": [
        3838
      ],
      "Escrow": [
        4808
      ],
      "FinalizableCrowdsale": [
        4288
      ],
      "IERC20": [
        1443
      ],
      "Math": [
        2553
      ],
      "ReentrancyGuard": [
        779
      ],
      "RefundEscrow": [
        4979
      ],
      "RefundableCrowdsale": [
        4427
      ],
      "SafeERC20": [
        1909
      ],
      "SafeMath": [
        2865
      ],
      "Secondary": [
        4638
      ],
      "TimedCrowdsale": [
        4199
      ]
    },
    "id": 4428,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4290,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "project:/contracts/distribution/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 4291,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4428,
        "sourceUnit": 4289,
        "src": "25:36:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/payment/escrow/RefundEscrow.sol",
        "file": "../payment/escrow/RefundEscrow.sol",
        "id": 4292,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4428,
        "sourceUnit": 4980,
        "src": "62:44:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4294,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2226,
              "src": "804:7:31"
            },
            "id": 4295,
            "nodeType": "InheritanceSpecifier",
            "src": "804:7:31"
          },
          {
            "baseName": {
              "id": 4296,
              "name": "FinalizableCrowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4288,
              "src": "813:20:31"
            },
            "id": 4297,
            "nodeType": "InheritanceSpecifier",
            "src": "813:20:31"
          }
        ],
        "contractDependencies": [
          4979
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4293,
          "nodeType": "StructuredDocumentation",
          "src": "108:654:31",
          "text": " @title RefundableCrowdsale\n @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n getting a refund if goal is not met.\n Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens."
        },
        "fullyImplemented": false,
        "id": 4427,
        "linearizedBaseContracts": [
          4427,
          4288,
          4199,
          3838,
          779,
          2226
        ],
        "name": "RefundableCrowdsale",
        "nameLocation": "781:19:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4300,
            "libraryName": {
              "id": 4298,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2865,
              "src": "846:8:31"
            },
            "nodeType": "UsingForDirective",
            "src": "840:27:31",
            "typeName": {
              "id": 4299,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "859:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 4302,
            "mutability": "mutable",
            "name": "_goal",
            "nameLocation": "941:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 4427,
            "src": "925:21:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4301,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "925:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4305,
            "mutability": "mutable",
            "name": "_escrow",
            "nameLocation": "1041:7:31",
            "nodeType": "VariableDeclaration",
            "scope": 4427,
            "src": "1020:28:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$4979",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "id": 4304,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4303,
                "name": "RefundEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4979,
                "src": "1020:12:31"
              },
              "referencedDeclaration": 4979,
              "src": "1020:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                "typeString": "contract RefundEscrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4331,
              "nodeType": "Block",
              "src": "1176:136:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4312,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4308,
                          "src": "1194:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1201:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1194:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2069732030",
                        "id": 4315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1204:32:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
                          "typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
                        },
                        "value": "RefundableCrowdsale: goal is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
                          "typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
                        }
                      ],
                      "id": 4311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1186:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:51:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4317,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:51:31"
                },
                {
                  "expression": {
                    "id": 4325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4318,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4305,
                      "src": "1247:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                        "typeString": "contract RefundEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4322,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "1274:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 4323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1274:8:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1257:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$4979_$",
                          "typeString": "function (address payable) returns (contract RefundEscrow)"
                        },
                        "typeName": {
                          "id": 4320,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4319,
                            "name": "RefundEscrow",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4979,
                            "src": "1261:12:31"
                          },
                          "referencedDeclaration": 4979,
                          "src": "1261:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                            "typeString": "contract RefundEscrow"
                          }
                        }
                      },
                      "id": 4324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1257:26:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                        "typeString": "contract RefundEscrow"
                      }
                    },
                    "src": "1247:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "id": 4326,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:36:31"
                },
                {
                  "expression": {
                    "id": 4329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4327,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4302,
                      "src": "1293:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4328,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4308,
                      "src": "1301:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1293:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4330,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:12:31"
                }
              ]
            },
            "documentation": {
              "id": 4306,
              "nodeType": "StructuredDocumentation",
              "src": "1055:90:31",
              "text": " @dev Constructor, creates RefundEscrow.\n @param goal Funding goal"
            },
            "id": 4332,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4308,
                  "mutability": "mutable",
                  "name": "goal",
                  "nameLocation": "1170:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4332,
                  "src": "1162:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1161:14:31"
            },
            "returnParameters": {
              "id": 4310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:0:31"
            },
            "scope": 4427,
            "src": "1150:162:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4340,
              "nodeType": "Block",
              "src": "1440:29:31",
              "statements": [
                {
                  "expression": {
                    "id": 4338,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4302,
                    "src": "1457:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4337,
                  "id": 4339,
                  "nodeType": "Return",
                  "src": "1450:12:31"
                }
              ]
            },
            "documentation": {
              "id": 4333,
              "nodeType": "StructuredDocumentation",
              "src": "1318:71:31",
              "text": " @return minimum amount of funds to be raised in wei."
            },
            "functionSelector": "40193883",
            "id": 4341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goal",
            "nameLocation": "1403:4:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1407:2:31"
            },
            "returnParameters": {
              "id": 4337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4341,
                  "src": "1431:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:9:31"
            },
            "scope": 4427,
            "src": "1394:75:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4366,
              "nodeType": "Block",
              "src": "1673:182:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4348,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "1691:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 4349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1691:11:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564",
                        "id": 4350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1704:36:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
                          "typeString": "literal_string \"RefundableCrowdsale: not finalized\""
                        },
                        "value": "RefundableCrowdsale: not finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
                          "typeString": "literal_string \"RefundableCrowdsale: not finalized\""
                        }
                      ],
                      "id": 4347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1683:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:58:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4352,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:58:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1759:14:31",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4354,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4379,
                            "src": "1760:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 4355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1760:13:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2072656163686564",
                        "id": 4357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1775:35:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
                          "typeString": "literal_string \"RefundableCrowdsale: goal reached\""
                        },
                        "value": "RefundableCrowdsale: goal reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
                          "typeString": "literal_string \"RefundableCrowdsale: goal reached\""
                        }
                      ],
                      "id": 4353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1751:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:60:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4359,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:60:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4363,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4344,
                        "src": "1839:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 4360,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4305,
                        "src": "1822:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 4362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4672,
                      "src": "1822:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 4364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4365,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:26:31"
                }
              ]
            },
            "documentation": {
              "id": 4342,
              "nodeType": "StructuredDocumentation",
              "src": "1475:139:31",
              "text": " @dev Investors can claim refunds here if crowdsale is unsuccessful.\n @param refundee Whose refund will be claimed."
            },
            "functionSelector": "bffa55d5",
            "id": 4367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nameLocation": "1628:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4344,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nameLocation": "1656:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4367,
                  "src": "1640:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:15:31",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:26:31"
            },
            "returnParameters": {
              "id": 4346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:31"
            },
            "scope": 4427,
            "src": "1619:236:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4378,
              "nodeType": "Block",
              "src": "2028:44:31",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4373,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3677,
                        "src": "2045:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 4374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2045:11:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 4375,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4302,
                      "src": "2060:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2045:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4372,
                  "id": 4377,
                  "nodeType": "Return",
                  "src": "2038:27:31"
                }
              ]
            },
            "documentation": {
              "id": 4368,
              "nodeType": "StructuredDocumentation",
              "src": "1861:112:31",
              "text": " @dev Checks whether funding goal was reached.\n @return Whether funding goal was reached"
            },
            "functionSelector": "7d3d6522",
            "id": 4379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nameLocation": "1987:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:2:31"
            },
            "returnParameters": {
              "id": 4372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4379,
                  "src": "2022:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2021:6:31"
            },
            "scope": 4427,
            "src": "1978:94:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4287
            ],
            "body": {
              "id": 4409,
              "nodeType": "Block",
              "src": "2209:204:31",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4384,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4379,
                      "src": "2223:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:13:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4402,
                    "nodeType": "Block",
                    "src": "2327:48:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4397,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4305,
                              "src": "2341:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 4399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4940,
                            "src": "2341:21:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 4400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:23:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4401,
                        "nodeType": "ExpressionStatement",
                        "src": "2341:23:31"
                      }
                    ]
                  },
                  "id": 4403,
                  "nodeType": "IfStatement",
                  "src": "2219:156:31",
                  "trueBody": {
                    "id": 4396,
                    "nodeType": "Block",
                    "src": "2238:83:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4386,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4305,
                              "src": "2252:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 4388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4917,
                            "src": "2252:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 4389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2252:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4390,
                        "nodeType": "ExpressionStatement",
                        "src": "2252:15:31"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4391,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4305,
                              "src": "2281:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 4393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4963,
                            "src": "2281:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 4394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2281:29:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4395,
                        "nodeType": "ExpressionStatement",
                        "src": "2281:29:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4404,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2385:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundableCrowdsale_$4427_$",
                          "typeString": "type(contract super RefundableCrowdsale)"
                        }
                      },
                      "id": 4406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4287,
                      "src": "2385:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:21:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4408,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:21:31"
                }
              ]
            },
            "documentation": {
              "id": 4380,
              "nodeType": "StructuredDocumentation",
              "src": "2078:83:31",
              "text": " @dev Escrow finalization task, called when finalize() is called."
            },
            "id": 4410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nameLocation": "2175:13:31",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2200:8:31"
            },
            "parameters": {
              "id": 4381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2188:2:31"
            },
            "returnParameters": {
              "id": 4383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2209:0:31"
            },
            "scope": 4427,
            "src": "2166:247:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3837
            ],
            "body": {
              "id": 4425,
              "nodeType": "Block",
              "src": "2560:64:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4421,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2216,
                          "src": "2604:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2604:12:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 4415,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4305,
                          "src": "2570:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$4979",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 4417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4894,
                        "src": "2570:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 4420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 4418,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2593:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2593:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2570:33:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 4423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:47:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4424,
                  "nodeType": "ExpressionStatement",
                  "src": "2570:47:31"
                }
              ]
            },
            "documentation": {
              "id": 4411,
              "nodeType": "StructuredDocumentation",
              "src": "2419:85:31",
              "text": " @dev Overrides Crowdsale fund forwarding, sending funds to escrow."
            },
            "id": 4426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nameLocation": "2518:13:31",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4413,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2551:8:31"
            },
            "parameters": {
              "id": 4412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:2:31"
            },
            "returnParameters": {
              "id": 4414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2560:0:31"
            },
            "scope": 4427,
            "src": "2509:115:31",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4428,
        "src": "763:1863:31",
        "usedErrors": []
      }
    ],
    "src": "0:2627:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-04T12:51:00.663Z",
  "devdoc": {
    "details": "Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
    "kind": "dev",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful.",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "returns": {
          "_0": "the crowdsale closing time."
        }
      },
      "constructor": {
        "details": "Constructor, creates RefundEscrow.",
        "params": {
          "goal": "Funding goal"
        }
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "returns": {
          "_0": "true if the crowdsale is finalized, false otherwise."
        }
      },
      "goal()": {
        "returns": {
          "_0": "minimum amount of funds to be raised in wei."
        }
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "returns": {
          "_0": "Whether funding goal was reached"
        }
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "returns": {
          "_0": "Whether crowdsale period has elapsed"
        }
      },
      "isOpen()": {
        "returns": {
          "_0": "true if the crowdsale is open, false otherwise."
        }
      },
      "openingTime()": {
        "returns": {
          "_0": "the crowdsale opening time."
        }
      },
      "rate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "wallet()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      }
    },
    "title": "RefundableCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TimedCrowdsaleExtended(uint256,uint256)": {
        "notice": "Event for crowdsale extending"
      },
      "TokensPurchased(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}